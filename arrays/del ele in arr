// C++ Program to Insert an element at a specific position in an Array

#include <bits/stdc++.h>
using namespace std;
// Function to insert element at a specific position
void insertElement(int arr[], int n, int x, int pos)
{
	// shift elements to the right
	// which are on the right side of pos
	for (int i = n - 1; i >= pos; i--)
		arr[i + 1] = arr[i];

	arr[pos] = x;
}

int main()
{
	int arr[15] = { 2, 4, 1, 8, 5 };
	int n = 5;
	cout<<"Before insertion : ";
	for (int i = 0; i < n; i++)
		cout<<arr[i]<<" ";
	cout<<endl;
	int x = 10, pos = 2;

	// Function call
	insertElement(arr, n, x, pos);
	n++;
	cout<<"After insertion : ";
	for (int i = 0; i < n; i++)
		cout<<arr[i]<<" ";
	return 0;
}
=================================================================================================================
// python code
# Python program to delete an element
# from an unsorted array

# Driver's code
if __name__ == '__main__':
	# Declaring array and key to delete
	arr = [10, 50, 30, 40, 20]
	key = 30

	print("Array before deletion:")
	print (arr)

	# deletes key if found in the array 
	# otherwise shows error not in list
	arr.remove(key)
	print("Array after deletion")
	print(arr)
=====================================================================================================================
//efficient cpp code for this
#include<bits/stdc++.h>
using namespace std;

void deleteAtSpecificPosition(vector<int> &arr, int pos){
    // Check if the position is valid
    if(pos < 0 || pos >= arr.size()){   //element to delete is leass or greater than the given arr
        cout << "Invalid position!" << endl;
        return;
    }
    
    // Deleting the element at the specified position
    arr.erase(arr.begin() + pos);  //arr.begin() points to starting position, begin()+pos => bring iterator from begin to point to pos to delete 
}

int main(){
    vector<int> arr = {1, 2, 3, 4, 5};
    int pos = 2; // Position at which to delete

    cout << "Before Deletion: ";
    for(int i=0; i<arr.size(); i++){
        cout << arr[i] << " ";
    }
    cout << endl;

    deleteAtSpecificPosition(arr, pos);

    cout << "After Deletion: ";
    for(int i=0; i<arr.size(); i++){
        cout << arr[i] << " ";
    }
    cout << endl;

    return 0;
}

