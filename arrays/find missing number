#include <bits/stdc++.h>
using namespace std;

// Function to get the missing number
int getMissingNo(int a[], int n)
{
	// Given the range of elements are 1 more than the size of array
	int N = n + 1;

	int total = (N) * (N + 1) / 2;
	for (int i = 0; i < n; i++)
		total -= a[i];
	return total;
}

int main()
{
	int arr[] = { 1, 2, 3, 5 };
	int N = sizeof(arr) / sizeof(arr[0]);
	int miss = getMissingNo(arr, N);    // Function call
	cout << miss;
	return 0;
}
=======================================================================================

// my own method
#include<bits/stdc++.h>
using namespace std;
int mis(int arr[], int n){
    int N=n+1;
    int sum1=N *( N+1) /2;
    int sum2= 0;
    for(int i=0;i<n;i++){
        sum2+=arr[i];
    }
    int miss=sum1-sum2;
    return miss;
}


int main(){
   int arr[] = { 1, 2, 3, 5 };
	int N = sizeof(arr) / sizeof(arr[0]);
	int missn = mis(arr, N);    // Function call
	cout << missn;
	return 0;
}
