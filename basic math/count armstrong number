/*
Q. wt this prog wanna do ?

1. The program is to  count the number of Armstrong numbers (also known as narcissistic numbers) within a given range of integers [X, Y] provided by the user.
2. program takes 2 inputs from user and finds all possible armstrong numbers between these numbers and outputs the count of all possible armstrong numbers.
3. If the user inputs X = 1 and Y = 500, the program will find all Armstrong numbers between 1 and 500.
4. For this range, the Armstrong numbers are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 153, 370, 371, 407.
5. The output will be 13 since there are 13 Armstrong numbers in this range.
*/

//armstrong number means:  a number that is equal to the sum of cubes of its digits (no.of digits).
// ex: n = 153 => (1^3)+(5^3)+(3^3) == 1 + 125 + 27 = 153.
// ex-2:  9474: (9^4) + (4^4) + (7^4) + (4^4) = 6581 + 256 + 2401 + 256 = 9474

#include <iostream>
#include <cmath>
using namespace std;

bool isArmstrong(int n) {
    int original = n;
    int sum = 0;
    int numDigits = floor(log10(abs(n)) + 1); // to get no.of digits 
    while (n > 0) {
        int digit = n % 10; // to derive last digit 
        sum += pow(digit, numDigits);  // Add the power of the digit to the sum
        n /= 10; // to get remaining no.of digits like after 123 in iter-2 n becomes 12  ; // Remove the last digit
    }
   return (sum == original); //here itself it checks the trur or false in ine statement
}

int main() {
    int X, Y;
    cin >> X >> Y;
    int count = 0;
    for (int i = X; i <= Y; i++) {
        if (isArmstrong(i)) {
            count++;
        }
    }
    cout << count;
    return 0;
}

----------------------------------------------------------------------------------------------------------------------------------

// program to print armstrong no.s between the given range of no.s and its count as well.

#include <iostream>
#include <cmath>
using namespace std;

bool isArmstrong(int n) {
    int original = n;
    int sum = 0;
    int numDigits = floor(log10(abs(n)) + 1); // Get the number of digits

    while (n > 0) {
        int digit = n % 10; // Get the last digit
        sum += pow(digit, numDigits); // Add the power of the digit to the sum
        n /= 10; // Remove the last digit
    }
   
    
    return (sum==original) ; // Correct return statement
}

int main() {
    int X, Y;
    cout<<"enter two numbers in whose range you need armstrong no.s: \n";
    cin >> X >> Y;
    int count = 0;
    cout<<"Armstrong no.s in range: " << X<< " and  " << Y <<" is: \n";
  
    for (int i = X; i <= Y; i++) {
        if (isArmstrong(i)) {
            cout << i <<" ";
            count++;
        }
    }
    cout << "\n\ntotal no. of Armstrong no.s are: " << count << endl;
    return 0;
}
