Chef is making cookies for N kids. He wants to give everyone an equal number of cookies. He must give at least 1 cookie to each kid.

Chef already has M cookies.
He can destroy or make 1 cookie in 1 second.

Find the minimum time after which he can evenly distribute the cookies between all kids.

Input Format
The first line of input will contain a single integer T, denoting the number of test cases.
Each test case consists of a single line of input.
The first and only line of each test case contains N and M - the number of kids and the initial number of cookies.
Output Format
For each test case, output on a new line the minimum time such that Chef can evenly distribute all his cookies.

Constraints
1≤T≤10^ 4
1≤N,M≤10 ^9

Sample 1:
Input

4
5 17
5 18
4 1
2 18
output:
2
2
3
0
Explanation:
Test Case 1 : Chef destroys 2 cookies to have 15 cookies total. This takes 2 seconds. Now, he can distribute all his cookies by giving every kid 3 cookies each.

Test Case 2 : Chef makes 2 cookies to have 20 cookies total. This takes 2 seconds again. Now, he can distribute all his cookies by giving every kid 4 cookies each.

Test Case 3 : Chef makes 3 more cookies to have 4 cookies total, and he gives 1 each to the
4 kids. Note that Chef can't destroy
1 cookie and then evenly distribute, as he needs to give everyone at least 1 cookie.
========================================================================================
Solution: 

#include <iostream>
#include <cmath>
using namespace std;

// Function to calculate minimum time to evenly distribute cookies
long long minTimeToDistributeCookies(long long N, long long M) {
    // If there are fewer cookies than kids, we need to create cookies
    if (M < N) {
        return N - M;
    }
    // Calculate the remainder of cookies when divided by the number of kids
    long long remainder = M % N;
    // Minimum time is the smaller value between making up the remainder or destroying cookies to reach the nearest multiple of N
    return min(remainder, N - remainder);
}

int main() {
    int T;
    cin >> T;
    while (T--) {
        long long N, M;
        cin >> N >> M;
      
        cout << minTimeToDistributeCookies(N, M) << endl;
    }
    return 0;
}
