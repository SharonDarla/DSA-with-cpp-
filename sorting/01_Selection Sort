#include <bits/stdc++.h>
using namespace std;

void selectionSort(vector<int> &arr) {
    int n = arr.size();

    for (int i = 0; i < n - 1; ++i) {

        // Assume the current position holds the minimum element
        int min_idx = i;

        // Iterate through the unsorted portion to find the actual minimum
        for (int j = i + 1; j < n; ++j) {
            if (arr[j] < arr[min_idx]) { 
                min_idx = j;   // Update min_idx if a smaller element is found
            }
        }

        // If a new minimum is found, swap it with the element at index i
        if (min_idx != i) {
            swap(arr[i], arr[min_idx]);
        }
    }
}

void printArray(vector<int> &arr) {
    for (int &val : arr) {
        cout << val << " ";
    }
    cout << endl;
}

int main() {
    vector<int> arr = {64, 25, 12, 22, 11};

    cout << "Original array: ";
    printArray(arr); 

    selectionSort(arr);


#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

void selecSort(vector<int>&arr){
    int n=arr.size();
    for(int i=0;i<n-1;i++){
        int minInd = i;
        for(int j=i+1;j<n;j++){
            if(arr[j] < arr[minInd]){
                minInd = j;
            }
        }
        if(minInd != i){
            swap(arr[i], arr[minInd]);
        }
    }
}
void print(vector<int>&arr){
    for(int &it : arr){
        cout << it <<" ";
    }
    cout << endl;
}
int main()
{
    int n; 
    cout <<"enter size of arr: ";  cin >> n;
    vector<int>arr(n);
    
    for(int i=0;i<n;i++){
        cin >> arr[i];
    }
    cout << "Orginal array: ";
    print(arr);
    
    selecSort(arr);
    cout<<"Sorted array: ";
    print(arr);

    return 0;
}

Practice que :
if(minInd != i){
          swap(arr[i],arr[minInd]);
      }
